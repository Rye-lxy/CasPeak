#! /bin/bash

# Check if required tools are installed
if ! command -v bedtools > /dev/null; then
    echo "bedtools not found in PATH. Exit." >&2
    exit 1
fi
if ! command -v lastal > /dev/null; then
    echo "lastal not found in PATH. Exit." >&2
    exit 1
fi
if ! command -v lamassemble > /dev/null; then
    echo "lamassemble not found in PATH. Exit." >&2
    exit 1
fi
if ! command -v last-dotplot > /dev/null; then
    echo "last-dotplot not found in PATH. Exit." >&2
    exit 1
fi

# Set default values
thread=8
x=0

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help)
            echo "Usage: caspeak --read <read> --ref <ref> --insert <insert> --start <start> --end <end> [-p <thread>] [-x] ..."
            echo "Options:"
            echo "  -h, --help: show this help message and exit"
            echo "  --read: path to the read FASTA/FATSQ file (required)"
            echo "  --ref: path to the reference genome FASTA file (required)"
            echo "  --insert: path to insert sequence FASTA file (required)"
            echo "  --start: start position of the target in the insert sequence (required)"
            echo "  --end: end position of the target in the insert sequence (required)"
            echo "  -p, --thread: number of threads (default 8)"
            echo "  -x: set the insert as exoggenous"
            exit 0
            ;;
        --read)
            read="$2"
            shift 2
            ;;
        --ref)
            ref="$2"
            shift 2
            ;;
        --insert)
            insert="$2"
            shift 2
            ;;
        --start)
            start="$2"
            shift 2
            ;;
        --end)
            end="$2"
            shift 2
            ;;
        -p|--thread)
            thread="$2"
            shift 2
            ;;
        -x)
            x=1
            shift
            ;;
        *)
            other_args="$other_args $1"
            shift
            ;;
    esac
done

# Check if required arguments are provided
if [ -z "$read" ] || [ -z "$ref" ] || [ -z "$insert" ] || [ -z "$start" ] || [ -z "$end" ]; then
    echo "Missing required arguments. Exit." >&2
    exit 1
elif [ ! -f "$read" ] || [ ! -f "$ref" ] || [ ! -f "$insert" ]; then
    echo "Some input files not found. Exit." >&2
    exit 1
fi

# Run LAST
mkdir -p lastdb
mkdir -p lastal
lastdb -P$thread -uRY4 lastdb/ref $ref
lastdb -P$thread -uRY4 lastdb/insert $insert
last-train -P$thread -Q0 lastdb/ref $read | lastal -P$thread --split -p - lastdb/ref $read > lastal/read_to_ref.maf
last-train -P$thread -Q0 lastdb/insert $read | lastal -P$thread --split -p - lastdb/insert $read > lastal/read_to_insert.maf

ignore_bed=""
lastdb="--lastdb lastdb/ref"
exog="--exog"
if [[ $x -eq 0 ]]; then
    head -n 1 $insert > target.fa
    tail -n +2 $insert | tr -d '\n' | cut -c $start-$end >> target.fa
    lastdb lastdb/target
    lastal -P$thread lastdb/target $ref | maf-convert bed -s 2 > lastal/target_to_ref.bed
    ignore_bed="--ignore-bed lastal/target_to_ref.bed"
    exog=""
fi

# Run analyzer
/home/rye/github/Caspeak/bin/main.py \
    --genome-maf lastal/read_to_ref.maf \
    --insert-maf lastal/read_to_insert.maf \
    --read-fasta $read \
    --insert-seq $insert \
    --target-start $start \
    --target-end $end \
    --thread $thread \
    $exog \
    $lastdb \
    $ignore_bed \
    $other_args